/* How CSS Works Behind the Scenes */

/*  
Load HTML->Parse HTML------> Document Object Model (DOM)
• Finds stylesheets in HTML head
• CSS is then Parsed
*/

/* CSS parsing resolves:
    1. Conflicting CSS declarations
    2. Process final CSS values such as percentages */

/* Final CSS stored in CSS Object Model CSSOM*/

/* DOM + CSSOM = Render Tree */

/* Website rendering: visual formatting model */

/* The Cascade:
• The procss of combining different sylesheets and resolving
conflicts
• Looks at Importance > Specificity > Source Order 

IMPORTANCE:
1. User ! important declarations
2. Author ! important declarations
3. Author Declarations
4. User declarations
5. Default browser declarations
*/

.button {
    font-size: 20px;
    color: white;
    background-color: blue !important;
}
/* Specificity??Calculate = 0010 */
/* (0 inline, 0 ID, 1 Class, 0 elements) */

#nav .pull-right .button {
    background-color: green;
}
/* Specificity??Calculate = 0122 */
/* (0 inline, 1 ID, 2 Class, 2 elements) */
/* This is a highly specific selector==the most specific, 
so it will win */


a {
    background-color: purple;
}

/* Specificity??Calculate = 0001 */
/* (0 inline, 0 ID, 0 Class, 1 elements) */
/* This is a highly specific selector */


#nav a.button:hover {
    background-color: yellow;
}

/* Specificity??Calculate = 0121 */
/* (0 inline, 1 ID, 2 Class, 1 elements) */
/* This is a highly specific selector */

/* 
SPECIFICTY:
What if all the declaration have the same importance??
Checks:
1. Inline Styles
2. IDs
3. Classes, pseudo-classes, attribute
4. Elements, pseudo-elements
*/

/* 
SOURCE ORDER
What if 2+ items have the same specificiy?
The last element in the declaration order gets selected */
